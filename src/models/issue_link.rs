/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

/// IssueLink : Details of a link between issues.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IssueLink {
    /// The ID of the issue link.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "inwardIssue")]
    pub inward_issue: Box<crate::models::LinkedIssue>,
    #[serde(rename = "outwardIssue")]
    pub outward_issue: Box<crate::models::LinkedIssue>,
    /// The URL of the issue link.
    #[serde(rename = "self", skip_serializing_if = "Option::is_none")]
    pub param_self: Option<String>,
    #[serde(rename = "type")]
    pub r#type: Box<crate::models::IssueLinkType>,
}

impl IssueLink {
    /// Details of a link between issues.
    pub fn new(inward_issue: crate::models::LinkedIssue, outward_issue: crate::models::LinkedIssue, r#type: crate::models::IssueLinkType) -> IssueLink {
        IssueLink {
            id: None,
            inward_issue: Box::new(inward_issue),
            outward_issue: Box::new(outward_issue),
            param_self: None,
            r#type: Box::new(r#type),
        }
    }
}


