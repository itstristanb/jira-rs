/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

/// WorkflowCreate : The details of the workflows to create.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkflowCreate {
    /// The description of the workflow to create.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The name of the workflow to create.
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "startPointLayout", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub start_point_layout: Option<Option<Box<crate::models::WorkflowLayout>>>,
    /// The statuses associated with this workflow.
    #[serde(rename = "statuses")]
    pub statuses: Vec<crate::models::StatusLayoutUpdate>,
    /// The transitions of this workflow.
    #[serde(rename = "transitions")]
    pub transitions: Vec<crate::models::TransitionUpdateDto>,
}

impl WorkflowCreate {
    /// The details of the workflows to create.
    pub fn new(name: String, statuses: Vec<crate::models::StatusLayoutUpdate>, transitions: Vec<crate::models::TransitionUpdateDto>) -> WorkflowCreate {
        WorkflowCreate {
            description: None,
            name,
            start_point_layout: None,
            statuses,
            transitions,
        }
    }
}


